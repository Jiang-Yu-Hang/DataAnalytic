spec_i([ proc,135,计算租户就诊信息统计的方法,'ZUtil_CalculateTenant',78,chs,'16_0_0-127771' ]).
 
struct_i(3,1,[],[]).
struct_i(2,1,[],[]).
 
level_i(3,[ 15,[ [ 15,many ] ],[],[],[ [ [ 15 ],[ 360 ] ] ],[ [ [ 15 ],[] ] ],[ 19 ],'IBR_ENCOUNTER',[],[] ]).
level_i(2,[ 15,[ [ 15,many ] ],[],[],[ [ [ 15 ],[ 360 ] ] ],[ [ [ 15 ],[] ] ],[],'',[],[] ]).
 
tw_i(3,[]).
tw_i(2,[]).
 
lwi_i(3,[ [ c([ t('trim(',1),t(360,2),t(')',4),t(=,10),t([ t('Sdt_entitycountitemcheck',23),t('Entityname',3) ],29) ],[ 360 ]) ] ]).
lwi_i(2,[ [] ]).
 
 
 
level_option_i(3,usr_condition,y).
level_option_i(2,distinct,of([ 360 ])).
 
ta_i(3,[ [ [ 15,360 ] ] ]).
ta_i(2,[ [ [ 15,360 ] ] ]).
 
las_i(3,[ [ 360 ] ]).
las_i(2,[ [ 360 ] ]).
 
lac_i(3,[ [] ]).
lac_i(2,[ [] ]).
 
 
 
 
 
 
default_i(e('Output',2,2,'''FIL''')).
 
rule_i(0,datastore(2,'DS_LAST_CHANGE','')).
rule_i(0,datastore(2,'LOCK_RETRY','10')).
rule_i(0,datastore(2,'WAIT_RECORD','0')).
rule_i(0,datastore(2,'SQLSERVER_VERSION','10')).
rule_i(0,datastore(2,'COMMENT_ON','No')).
rule_i(0,datastore(2,'DFT_TMP_TBLSPACE','')).
rule_i(0,datastore(2,'DFT_IDX_TBLSPACE','')).
rule_i(0,datastore(2,'DFT_TBL_TBLSPACE','')).
rule_i(0,datastore(2,'DCL_REF_INT_DB','Yes')).
rule_i(0,datastore(2,'PRIMARY_KEY_TYPE','PK')).
rule_i(0,datastore(2,'CS_SCHEMA','')).
rule_i(0,datastore(2,'SORT_ATTRIBUTES','Yes')).
rule_i(0,datastore(2,'JRN400','QSQJRN')).
rule_i(0,datastore(2,'CREATE_SAVF','Yes')).
rule_i(0,datastore(2,'PGMLIB','')).
rule_i(0,datastore(2,'DTALIB','')).
rule_i(0,datastore(2,'CC_USER_PASS','商?')).
rule_i(0,datastore(2,'CC_USER_ID',sa)).
rule_i(0,datastore(2,'CC_SERVER','DESKTOP-RK6IV3Q')).
rule_i(0,datastore(2,'CC_DBNAME','DAS_ConfigGZ')).
rule_i(0,datastore(2,'RecycleRWMin','30')).
rule_i(0,datastore(2,'RecycleRWType','1')).
rule_i(0,datastore(2,'RecycleRW','-1')).
rule_i(0,datastore(2,'POOL_STARTUP','No')).
rule_i(0,datastore(2,'POOLSIZE_RW','10')).
rule_i(0,datastore(2,'UnlimitedRWPool','-1')).
rule_i(0,datastore(2,'PoolRWEnabled','-1')).
rule_i(0,datastore(2,'CS_RPCPGML','')).
rule_i(0,datastore(2,'JDBC_DATASOURCE','')).
rule_i(0,datastore(2,'USE_JDBC_DATASOURCE','0')).
rule_i(0,datastore(2,'DS_DBMS_ADDINFO','')).
rule_i(0,datastore(2,'USER_PASSWORD',靠靠靠)).
rule_i(0,datastore(2,'USER_ID',sa)).
rule_i(0,datastore(2,'TRUSTED_CONNECTION','No')).
rule_i(0,datastore(2,'CS_CONNECT','First')).
rule_i(0,datastore(2,'DBMS_PORT','')).
rule_i(0,datastore(2,'CS_SERVER','DESKTOP-RK6IV3Q')).
rule_i(0,datastore(2,'CS_DBNAME','DAS_ConfigGZ')).
rule_i(0,datastore(2,'CS_FLEDSNAME','')).
rule_i(0,datastore(2,'CS_DRVNAME','sql server')).
rule_i(0,datastore(2,'CS_DSNAME','')).
rule_i(0,datastore(2,'DB_URL','')).
rule_i(0,datastore(2,'JDBC_CUSTOM_URL','0')).
rule_i(0,datastore(2,'JDBC_CUSTOM_DRIVER','')).
rule_i(0,datastore(2,'JDBC_DRIVER','net.sourceforge.jtds.jdbc.Driver')).
rule_i(0,datastore(2,'CONNECT_METHOD','OPSYS')).
rule_i(0,datastore(2,'ACCESS_TECHNO','ADONET')).
rule_i(0,datastore(2,'MAIN_DS','-1')).
rule_i(0,datastore(2,'REORG_GEN','8')).
rule_i(0,datastore(2,'HelpKeyword','23')).
rule_i(0,datastore(2,'DBMS',12)).
rule_i(0,datastore(2,'NAME','DataStore1')).
rule_i(0,datastore(1,'DS_LAST_CHANGE','')).
rule_i(0,datastore(1,'LOCK_RETRY','10')).
rule_i(0,datastore(1,'WAIT_RECORD','0')).
rule_i(0,datastore(1,'SQLSERVER_VERSION','10')).
rule_i(0,datastore(1,'COMMENT_ON','No')).
rule_i(0,datastore(1,'DFT_TMP_TBLSPACE','')).
rule_i(0,datastore(1,'DFT_IDX_TBLSPACE','')).
rule_i(0,datastore(1,'DFT_TBL_TBLSPACE','')).
rule_i(0,datastore(1,'DCL_REF_INT_DB','Yes')).
rule_i(0,datastore(1,'PRIMARY_KEY_TYPE','PK')).
rule_i(0,datastore(1,'CS_SCHEMA','')).
rule_i(0,datastore(1,'SORT_ATTRIBUTES','Yes')).
rule_i(0,datastore(1,'JRN400','QSQJRN')).
rule_i(0,datastore(1,'CREATE_SAVF','Yes')).
rule_i(0,datastore(1,'PGMLIB','')).
rule_i(0,datastore(1,'DTALIB','')).
rule_i(0,datastore(1,'CC_USER_PASS','商?')).
rule_i(0,datastore(1,'CC_USER_ID',sa)).
rule_i(0,datastore(1,'CC_SERVER','DESKTOP-RK6IV3Q')).
rule_i(0,datastore(1,'CC_DBNAME','DAS_InstanceTYY')).
rule_i(0,datastore(1,'RecycleRWMin','30')).
rule_i(0,datastore(1,'RecycleRWType','1')).
rule_i(0,datastore(1,'RecycleRW','-1')).
rule_i(0,datastore(1,'POOL_STARTUP','No')).
rule_i(0,datastore(1,'POOLSIZE_RW','10')).
rule_i(0,datastore(1,'UnlimitedRWPool','-1')).
rule_i(0,datastore(1,'PoolRWEnabled','-1')).
rule_i(0,datastore(1,'CS_RPCPGML','')).
rule_i(0,datastore(1,'JDBC_DATASOURCE','')).
rule_i(0,datastore(1,'USE_JDBC_DATASOURCE','0')).
rule_i(0,datastore(1,'DS_DBMS_ADDINFO','')).
rule_i(0,datastore(1,'USER_PASSWORD',靠靠靠)).
rule_i(0,datastore(1,'USER_ID',sa)).
rule_i(0,datastore(1,'TRUSTED_CONNECTION','No')).
rule_i(0,datastore(1,'CS_CONNECT','First')).
rule_i(0,datastore(1,'DBMS_PORT','')).
rule_i(0,datastore(1,'CS_SERVER','DESKTOP-RK6IV3Q')).
rule_i(0,datastore(1,'CS_DBNAME','DAS_InstanceTYY')).
rule_i(0,datastore(1,'CS_FLEDSNAME','')).
rule_i(0,datastore(1,'CS_DRVNAME','sql server')).
rule_i(0,datastore(1,'CS_DSNAME','')).
rule_i(0,datastore(1,'DB_URL','')).
rule_i(0,datastore(1,'JDBC_CUSTOM_URL','0')).
rule_i(0,datastore(1,'JDBC_CUSTOM_DRIVER','')).
rule_i(0,datastore(1,'JDBC_DRIVER','net.sourceforge.jtds.jdbc.Driver')).
rule_i(0,datastore(1,'CONNECT_METHOD','OPSYS')).
rule_i(0,datastore(1,'ACCESS_TECHNO','ADONET')).
rule_i(0,datastore(1,'MAIN_DS','-1')).
rule_i(0,datastore(1,'REORG_GEN','8')).
rule_i(0,datastore(1,'HelpKeyword','20')).
rule_i(0,datastore(1,'DBMS',12)).
rule_i(0,datastore(1,'NAME','Default')).
rule_i(0,prop(idNULLS_BEHAVIOR,idNB_Current)).
rule_i(0,prop('PWFCallable','0')).
rule_i(0,prop('ObjectVisibility','Public')).
rule_i(0,prop('FullyQualifiedName','ZUtil_CalculateTenant')).
rule_i(0,prop('GenerateObject','-1')).
rule_i(0,prop('CS_ORA_FORUPD','UMPV')).
rule_i(0,prop('Optimize_copy','UMPV')).
rule_i(0,prop('JOIN_TYPE','UMPV')).
rule_i(0,prop('DBMS_JOINS','UMPV')).
rule_i(0,prop('BEEPONMSG','UMPV')).
rule_i(0,prop('GENERATE_ILE','UMPV')).
rule_i(0,prop('PRT_DDS','UMPV')).
rule_i(0,prop('TRNCMT','YES')).
rule_i(0,prop('NULLVALUE_AS_NULL','UMPV')).
rule_i(0,prop('INITIALIZE_NEW','UMPV')).
rule_i(0,prop('STD_FUNC_OBJECT','Yes')).
rule_i(0,prop('SPC_WARNINGS_DISABLED','spc0096 spc0107 spc0142')).
rule_i(0,prop('TRNEND','Yes')).
rule_i(0,prop('AUTOCENTER','UMPV')).
rule_i(0,prop('LSTPFOOT','YES')).
rule_i(0,prop('CANCEL','YES')).
rule_i(0,prop('CONFIRM','UMPV')).
rule_i(0,prop('TRNCFM','UMPV')).
rule_i(0,prop('PRINT_CUST_LAYOUT','UMPV')).
rule_i(0,prop('OUTPUT','FIL')).
rule_i(0,prop(idConnectivitySupport,idInherit)).
rule_i(0,prop(idISBCEJB,'0')).
rule_i(0,prop(idISPRCWEBSERVICE,'0')).
rule_i(0,prop('USE_ENCRYPTION','NO')).
rule_i(0,prop('EXECUTE_IN_NEW_UTL','0')).
rule_i(0,prop('Theme',o(25,'WorkWithPlusTheme'))).
rule_i(0,prop('OBJECT_METADATA','')).
rule_i(0,prop('CALL_PROTOCOL','INTERNAL')).
rule_i(0,prop('IsMain','0')).
rule_i(0,prop(sessiontype,'RW')).
rule_i(0,prop('Folder',o(8,'ZUtil'))).
rule_i(0,prop('ObjDesc',计算租户就诊信息统计的方法)).
rule_i(0,prop('ObjName','ZUtil_CalculateTenant')).
rule_i(0,maingen(15)).
rule_i(0,parm([ 'Ocontent' ],[])).
rule_i(0,parmio([ [ 'Ocontent',out ] ])).
rule_i(0,output('FIL')).
 
a_i(3,1,f,'Err',[],[ [],[ t('0',3) ] ]).
a_i(4,2,t,15,[],[ [],'',[] ]).
a_i(5,3,t,15,[],[ [],'IBR_ENCOUNTER',[] ]).
 
v_i(f,i,3,[]).
v_i(f,o,3,'Err').
v_i(t,i,4,[]).
v_i(t,o,4,360).
v_i(t,i,5,[]).
v_i(t,o,5,360).
 
 
 
 
 
 
attri_i('Output',[ 'Gx_out',char,3,0,'',1,'','',22 ]).
attri_i(19,[ 'BR_EncounterID',int,18,0,'ZZZZZZZZZZZZZZZZZZ',0,就诊信息主键,'',0 ]).
attri_i('GXV1',[ 'GXV1',int,8,0,'',0,'','',20 ]).
attri_i(360,[ 'BAS_TenantTenantCode',svchar,20,0,'',0,'BAS_Tenant Tenant Code','',0 ]).
attri_i('Errmsg',[ 'Gx_emsg',char,70,0,'',1,'Error text','',18 ]).
attri_i('Err',[ 'Gx_err',int,3,0,'ZZ9',1,'Error code','',17 ]).
attri_i('Tsingle',[ tSingle,o('SDT_EntityCount'),0,0,'',0,'t Single','',16 ]).
attri_i('Tnum',[ tNum,int,4,0,'ZZZ9',0,'t Num','',15 ]).
attri_i('Tnewsdt_entitycount',[ tNewSDT_EntityCount,o(objectcollection('SDT_EntityCount')),0,0,'',0,'t New SDT_Entity Count','',14 ]).
attri_i('Tflag',[ tFlag,boolean,4,0,'',0,查找是否有重复,'',13 ]).
attri_i('Sdt_entitycountitemcheck',[ 'SDT_EntityCountItemCheck',o('SDT_EntityCount'),0,0,'',0,'SDT_Entity Count Item Check','',12 ]).
attri_i('Sdt_entitycountitem',[ 'SDT_EntityCountItem',o('SDT_EntityCount'),0,0,'',0,'SDT_Entity Count Item','',11 ]).
attri_i('Sdt_entitycount',[ 'SDT_EntityCount',o(objectcollection('SDT_EntityCount')),0,0,'',0,'SDT_Entity Count','',10 ]).
attri_i('Num',[ num,o('SDT_EntityCount'),0,0,'',0,num,'',9 ]).
attri_i('Ocontent',[ oContent,vchar,2048,0,'',0,'Content','',8 ]).
 
table_i(15,[ 'BR_Encounter',[ 19,360 ],' T15','BR_Encounter' ]).
 
index_i(15,[ 'IBR_ENCOUNTER',u,[ 19 ],'IBR_Encounter' ]).
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
enumerated_i(45,172,94).
enumerated_i(45,537,117).
 
enum_value_i(45,94,'1',entering,'"录入中"',[ none ]).
enum_value_i(45,94,'2',waitCheck,'"待初审"',[ none ]).
enum_value_i(45,94,'3',denyCheck,'"初审不通过"',[ none ]).
enum_value_i(45,94,'4',waitApprove,'"待复审"',[ none ]).
enum_value_i(45,94,'5',denyApprove,'"复审不通过"',[ none ]).
enum_value_i(45,94,'6',complete,'"完成"',[ none ]).
enum_value_i(45,117,'1',lis,'"lis"',[ none ]).
 
enum_value_info_i(45,94,'DM_ApproveStatus').
enum_value_info_i(45,117,'DM_Datasource').
 
enum_type_i(45,94,int,4,0).
enum_type_i(45,117,int,4,0).
 
dom_info_i(69,[ 'ID' ]).
dom_info_i(64,[ 'DM_Date' ]).
dom_info_i(94,[ 'DM_ApproveStatus' ]).
dom_info_i(66,[ 'UpdDate' ]).
dom_info_i(95,[ 'CrtUser' ]).
dom_info_i(67,[ 'UpdUser' ]).
dom_info_i(117,[ 'DM_Datasource' ]).
 
 
break_i(2,nvg,1,[],[ [ 360 ],[],[] ]).
break_i(3,nvg,1,[],[ [],[ 360 ],[] ]).
break_i(1,rpt,0,[],[ [],[],[] ]).
 
b_group_i(1,1,lit,0,1,0).
b_group_i(1,2,nvg,2,4,4).
b_group_i(2,1,lit,0,5,5).
b_group_i(1,3,lit,0,16,13).
b_group_i(1,4,nvg,3,22,22).
b_group_i(3,1,lit,0,23,23).
b_group_i(1,5,lit,0,26,0).
 
b_line_i(0,1,1,cmd,0,[]).
b_line_i(1,1,1,cmd,0,[ t('',107,0,0),t([ t('Sdt_entitycount',23,1,1),t('clear(',1,1,18) ],31,1,1),t(')',4,0,25) ]).
b_line_i(2,1,1,cmd,0,[]).
b_line_i(3,1,1,cmd,0,[]).
b_line_i(4,2,1,cmd,5,[ t('',121,4,0),t(table,3,4,10),t(15,3,4,10) ]).
b_line_i(5,2,1,cmd,5,[]).
b_line_i(6,2,1,cmd,5,[]).
b_line_i(7,2,1,cmd,5,[]).
b_line_i(8,2,1,cmd,5,[ t('',109,5,0),t('null(',1,8,26),t(360,2,5,5),t(')',4,5,35),t('.OR.',9,5,37),t('isnull(',1,8,63),t(360,2,5,42),t(')',4,5,71) ]).
b_line_i(9,2,1,cmd,5,[ t('',110,5,0) ]).
b_line_i(10,2,1,cmd,5,[ t('',107,5,0),t('Sdt_entitycountitem',23,5,0),t(=,10,5,0),t([ 'SDT_EntityCount',[ t('(',0,10,27),t(')',4,10,28) ],n ],46,5,0) ]).
b_line_i(11,2,1,cmd,5,[ t('',107,5,0),t([ t('Sdt_entitycountitem',23,5,0),t('Entityname',3,5,0) ],29,5,0),t(=,10,5,0),t('trim(',1,5,0),t(360,2,5,0),t(')',4,5,0) ]).
b_line_i(12,2,1,cmd,5,[ t('',107,5,0),t([ t('Sdt_entitycount',23,12,3),t('add(',1,12,20) ],31,12,3),t('Sdt_entitycountitem',23,5,25),t(')',4,5,45) ]).
b_line_i(13,2,1,cmd,5,[ t('',111,5,0) ]).
b_line_i(14,2,1,cmd,5,[]).
b_line_i(15,2,1,cmd,5,[ t('',128,5,0) ]).
b_line_i(16,1,3,cmd,12,[]).
b_line_i(17,1,3,cmd,12,[ t('',107,12,0),t([ t('Tnewsdt_entitycount',23,17,1),t('clear(',1,17,22) ],31,17,1),t(')',4,12,29) ]).
b_line_i(18,1,3,cmd,12,[]).
b_line_i(19,1,3,cmd,12,[ t('',107,12,0),t('GXV1',23,12,0),t(=,10,12,0),t(1,3,12,0) ]).
b_line_i([ 19,2 ],1,3,cmd,12,[ t('',114,12,0),t('GXV1',23,12,0),t(<=,10,12,0),t([ t('Sdt_entitycount',23,19,34),t('Count',3,19,0) ],29,19,0) ]).
b_line_i([ 19,3 ],1,3,cmd,12,[ t('',107,12,0),t('Sdt_entitycountitemcheck',23,12,0),t(=,10,12,0),t([ t('Sdt_entitycount',23,12,0),t('item(',1,12,0) ],31,12,0),t('GXV1',23,12,0),t(')',4,12,0) ]).
b_line_i(20,1,3,cmd,13,[]).
b_line_i(21,1,3,cmd,13,[ t('',107,13,0),t([ t('Sdt_entitycountitemcheck',23,13,0),t('Value',3,13,0) ],29,13,0),t(=,10,13,0),t('0',3,13,0) ]).
b_line_i(22,3,1,cmd,23,[ t('',121,22,0),t(table,3,22,11),t(15,3,22,11) ]).
b_line_i(24,3,1,cmd,23,[ t('',107,23,0),t([ t('Sdt_entitycountitemcheck',23,23,0),t('Value',3,23,0) ],29,23,0),t(=,10,23,0),t([ t('Sdt_entitycountitemcheck',23,23,0),t('Value',3,23,0) ],29,23,0),t(+,5,23,0),t('1',3,23,0) ]).
b_line_i(25,3,1,cmd,23,[ t('',128,23,0) ]).
b_line_i(26,1,5,cmd,17,[]).
b_line_i(27,1,5,cmd,17,[ t('',107,17,0),t([ t('Tnewsdt_entitycount',23,27,2),t('add(',1,27,23) ],31,27,2),t('Sdt_entitycountitemcheck',23,17,28),t(')',4,17,53) ]).
b_line_i([ 28,1 ],1,5,cmd,17,[ t('',107,17,0),t('GXV1',23,17,0),t(=,10,17,0),t('GXV1',23,17,0),t(+,5,17,0),t(1,3,17,0) ]).
b_line_i([ 28,2 ],1,5,cmd,17,[ t('',115,17,0) ]).
b_line_i(29,1,5,cmd,18,[]).
b_line_i(30,1,5,cmd,18,[ t('',107,18,0),t('Ocontent',23,18,0),t(=,10,18,0),t([ t('Tnewsdt_entitycount',23,18,0),t('tojson(',1,18,0) ],31,18,0),t(')',4,18,0) ]).
 
 
 
 
 
 
page_layout_i([ 66,0,6 ]).
 
 
 
paper_info_i([ 0,256,'',11909,16834,0,0,0,0,1 ]).
 
ppi_i([ 100,100 ]).
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
grid_i(7,15).
 
 
 
form_class_i(1,'Graphic').
 
 
 
 
 
att_prop_i(45,'Sdt_entitycount','ExternalName','SDT_EntityCountCollection',d).
att_prop_i(45,'Sdt_entitycount','ExternalNamespace','DataAnalysisPlatform',d).
att_prop_i(45,'Tnewsdt_entitycount','ExternalName','SDT_EntityCountCollection',d).
att_prop_i(45,'Tnewsdt_entitycount','ExternalNamespace','DataAnalysisPlatform',d).
att_prop_i(45,360,'ExternalName','BAS_TenantTenantCode',d).
att_prop_i(45,360,'ExternalNamespace','DataAnalysisPlatform',d).
att_prop_i(45,360,'EmptyAsNull','Yes',d).
att_prop_i(45,360,idBasedOn,'',d).
att_prop_i(45,360,'ATT_INITIAL_VALUE','',d).
att_prop_i(45,360,'DB_NLS_SUPPORT','Yes',d).
att_prop_i(45,360,'AttRegEx','',d).
att_prop_i(45,360,'AttValidationFailedMsg','',d).
att_prop_i(45,360,'FullName','BAS_TenantTenantCode',v).
att_prop_i(45,19,'ExternalName','BR_EncounterID',d).
att_prop_i(45,19,'ExternalNamespace','DataAnalysisPlatform',d).
att_prop_i(45,19,'EmptyAsNull','Yes',d).
att_prop_i(45,19,idBasedOn,69,v).
att_prop_i(45,19,'AUTONUMBER','-1',d).
att_prop_i(45,19,'AUTONUMBER_START','1',d).
att_prop_i(45,19,'AUTONUMBER_STEP','1',d).
att_prop_i(45,19,'AUTONUMBER_FORREPLICATION','-1',d).
att_prop_i(45,19,'ATT_INITIAL_VALUE','',d).
att_prop_i(45,19,'AttRegEx','',d).
att_prop_i(45,19,'AttValidationFailedMsg','',d).
att_prop_i(45,19,'FullName','BR_EncounterID',v).
 
 
tbl_att_prop_i(45,15,19,'AllowNulls',n).
tbl_att_prop_i(45,15,19,'AUTONUMBER',y).
 
var_prop_i(45,'Ocontent',idBasedOn,'',v).
 
 
 
 
 
struct_dt_i([ 26,85,0 ],name,'SDT_EntityCount').
struct_dt_i([ 26,85,0 ],namespace,'DataAnalysisPlatform').
struct_dt_i([ 26,85,0 ],'ObjName','SDT_EntityCount').
struct_dt_i([ 26,85,0 ],'ObjDesc',病种人数统计).
struct_dt_i([ 26,85,0 ],'ExternalName','SDT_EntityCount').
struct_dt_i([ 26,85,0 ],'ExternalNamespace','DataAnalysisPlatform').
struct_dt_i([ 26,85,0 ],fullname,'SDT_EntityCount').
struct_dt_i([ 26,85,0 ],modified,yes).
 
struct_dt_elem_i([ 26,85,0 ],1,name,'Entityname').
struct_dt_elem_i([ 26,85,0 ],1,camelname,entityname).
struct_dt_elem_i([ 26,85,0 ],1,length,40).
struct_dt_elem_i([ 26,85,0 ],1,decimals,0).
struct_dt_elem_i([ 26,85,0 ],1,type,[ 13,40,0 ]).
struct_dt_elem_i([ 26,85,0 ],1,pic,'').
struct_dt_elem_i([ 26,85,0 ],1,collection,'False').
struct_dt_elem_i([ 26,85,0 ],1,'ExternalName',entityname).
struct_dt_elem_i([ 26,85,0 ],1,'ExternalNamespace','DataAnalysisPlatform').
struct_dt_elem_i([ 26,85,0 ],1,'XmlType','Element').
struct_dt_elem_i([ 26,85,0 ],1,'XmlName','').
struct_dt_elem_i([ 26,85,0 ],1,'XmlNamespace','').
struct_dt_elem_i([ 26,85,0 ],1,soaptype,'').
struct_dt_elem_i([ 26,85,0 ],1,'XmlInclude',idXmlIncludeAlways).
struct_dt_elem_i([ 26,85,0 ],1,'JsonName','').
struct_dt_elem_i([ 26,85,0 ],2,name,'Value').
struct_dt_elem_i([ 26,85,0 ],2,camelname,value).
struct_dt_elem_i([ 26,85,0 ],2,length,15).
struct_dt_elem_i([ 26,85,0 ],2,decimals,0).
struct_dt_elem_i([ 26,85,0 ],2,sign,0).
struct_dt_elem_i([ 26,85,0 ],2,type,[ 4,15,0 ]).
struct_dt_elem_i([ 26,85,0 ],2,pic,'ZZZZZZZZZZZZZZ9').
struct_dt_elem_i([ 26,85,0 ],2,collection,'False').
struct_dt_elem_i([ 26,85,0 ],2,'ExternalName',value).
struct_dt_elem_i([ 26,85,0 ],2,'ExternalNamespace','DataAnalysisPlatform').
struct_dt_elem_i([ 26,85,0 ],2,'XmlType','Element').
struct_dt_elem_i([ 26,85,0 ],2,'XmlName','').
struct_dt_elem_i([ 26,85,0 ],2,'XmlNamespace','').
struct_dt_elem_i([ 26,85,0 ],2,soaptype,'').
struct_dt_elem_i([ 26,85,0 ],2,'XmlInclude',idXmlIncludeAlways).
struct_dt_elem_i([ 26,85,0 ],2,'JsonName','').
 
 
 
 
 
 
 
pgm_callprotocol_i(proc,135,'ZUTIL_CALCULATETENANT','INTERNAL').
 
 
 
 
 
 
 
 
 
 
 
 
 
 
