spec_i([ proc,102,删除影像学的所有信息,'ZBR_DeleteMedicalImaging',78,chs,'16_0_0-127771' ]).
 
struct_i(2,1,[],[]).
struct_i(3,2,[ 225 ],[]).
 
level_i(2,[ 30,[ [ 30,many ] ],[],[],[ [ [ 30 ],[ 225 ] ] ],[ [ [ 30 ],[] ] ],[ 225 ],'IBR_MEDICALIMAGING',[ 30,[ [ [],'Ibr_medicalimagingid',225 ] ] ],[] ]).
level_i(3,[ 29,[ [ 29,many ] ],[],[],[ [ [ 29 ],[ 225 ] ] ],[ [ [ 29 ],[] ] ],[ 225 ],'IBR_MEDICALIMAGING_DIAG1',[ 29,[ [ [],225,225 ] ] ],[] ]).
 
tw_i(2,[]).
tw_i(3,[]).
 
lwi_i(2,[ [] ]).
lwi_i(3,[ [] ]).
 
 
 
 
ta_i(2,[ [ [ 30,225 ] ] ]).
ta_i(3,[ [ [ 29,225 ] ] ]).
 
las_i(2,[ [ 225 ] ]).
las_i(3,[ [ 225 ] ]).
 
lac_i(2,[ [] ]).
lac_i(3,[ [] ]).
 
 
 
 
 
 
default_i(e('Output',2,2,'''FIL''')).
 
rule_i(0,datastore(2,'DS_LAST_CHANGE','')).
rule_i(0,datastore(2,'LOCK_RETRY','10')).
rule_i(0,datastore(2,'WAIT_RECORD','0')).
rule_i(0,datastore(2,'SQLSERVER_VERSION','10')).
rule_i(0,datastore(2,'COMMENT_ON','No')).
rule_i(0,datastore(2,'DFT_TMP_TBLSPACE','')).
rule_i(0,datastore(2,'DFT_IDX_TBLSPACE','')).
rule_i(0,datastore(2,'DFT_TBL_TBLSPACE','')).
rule_i(0,datastore(2,'DCL_REF_INT_DB','Yes')).
rule_i(0,datastore(2,'PRIMARY_KEY_TYPE','PK')).
rule_i(0,datastore(2,'CS_SCHEMA','')).
rule_i(0,datastore(2,'SORT_ATTRIBUTES','Yes')).
rule_i(0,datastore(2,'JRN400','QSQJRN')).
rule_i(0,datastore(2,'CREATE_SAVF','Yes')).
rule_i(0,datastore(2,'PGMLIB','')).
rule_i(0,datastore(2,'DTALIB','')).
rule_i(0,datastore(2,'CC_USER_PASS','商?')).
rule_i(0,datastore(2,'CC_USER_ID',sa)).
rule_i(0,datastore(2,'CC_SERVER','DESKTOP-RK6IV3Q')).
rule_i(0,datastore(2,'CC_DBNAME','DAS_ConfigGZ')).
rule_i(0,datastore(2,'RecycleRWMin','30')).
rule_i(0,datastore(2,'RecycleRWType','1')).
rule_i(0,datastore(2,'RecycleRW','-1')).
rule_i(0,datastore(2,'POOL_STARTUP','No')).
rule_i(0,datastore(2,'POOLSIZE_RW','10')).
rule_i(0,datastore(2,'UnlimitedRWPool','-1')).
rule_i(0,datastore(2,'PoolRWEnabled','-1')).
rule_i(0,datastore(2,'CS_RPCPGML','')).
rule_i(0,datastore(2,'JDBC_DATASOURCE','')).
rule_i(0,datastore(2,'USE_JDBC_DATASOURCE','0')).
rule_i(0,datastore(2,'DS_DBMS_ADDINFO','')).
rule_i(0,datastore(2,'USER_PASSWORD',靠靠靠)).
rule_i(0,datastore(2,'USER_ID',sa)).
rule_i(0,datastore(2,'TRUSTED_CONNECTION','No')).
rule_i(0,datastore(2,'CS_CONNECT','First')).
rule_i(0,datastore(2,'DBMS_PORT','')).
rule_i(0,datastore(2,'CS_SERVER','DESKTOP-RK6IV3Q')).
rule_i(0,datastore(2,'CS_DBNAME','DAS_ConfigGZ')).
rule_i(0,datastore(2,'CS_FLEDSNAME','')).
rule_i(0,datastore(2,'CS_DRVNAME','sql server')).
rule_i(0,datastore(2,'CS_DSNAME','')).
rule_i(0,datastore(2,'DB_URL','')).
rule_i(0,datastore(2,'JDBC_CUSTOM_URL','0')).
rule_i(0,datastore(2,'JDBC_CUSTOM_DRIVER','')).
rule_i(0,datastore(2,'JDBC_DRIVER','net.sourceforge.jtds.jdbc.Driver')).
rule_i(0,datastore(2,'CONNECT_METHOD','OPSYS')).
rule_i(0,datastore(2,'ACCESS_TECHNO','ADONET')).
rule_i(0,datastore(2,'MAIN_DS','-1')).
rule_i(0,datastore(2,'REORG_GEN','8')).
rule_i(0,datastore(2,'HelpKeyword','23')).
rule_i(0,datastore(2,'DBMS',12)).
rule_i(0,datastore(2,'NAME','DataStore1')).
rule_i(0,datastore(1,'DS_LAST_CHANGE','')).
rule_i(0,datastore(1,'LOCK_RETRY','10')).
rule_i(0,datastore(1,'WAIT_RECORD','0')).
rule_i(0,datastore(1,'SQLSERVER_VERSION','10')).
rule_i(0,datastore(1,'COMMENT_ON','No')).
rule_i(0,datastore(1,'DFT_TMP_TBLSPACE','')).
rule_i(0,datastore(1,'DFT_IDX_TBLSPACE','')).
rule_i(0,datastore(1,'DFT_TBL_TBLSPACE','')).
rule_i(0,datastore(1,'DCL_REF_INT_DB','Yes')).
rule_i(0,datastore(1,'PRIMARY_KEY_TYPE','PK')).
rule_i(0,datastore(1,'CS_SCHEMA','')).
rule_i(0,datastore(1,'SORT_ATTRIBUTES','Yes')).
rule_i(0,datastore(1,'JRN400','QSQJRN')).
rule_i(0,datastore(1,'CREATE_SAVF','Yes')).
rule_i(0,datastore(1,'PGMLIB','')).
rule_i(0,datastore(1,'DTALIB','')).
rule_i(0,datastore(1,'CC_USER_PASS','商?')).
rule_i(0,datastore(1,'CC_USER_ID',sa)).
rule_i(0,datastore(1,'CC_SERVER','DESKTOP-RK6IV3Q')).
rule_i(0,datastore(1,'CC_DBNAME','DAS_InstanceTYY')).
rule_i(0,datastore(1,'RecycleRWMin','30')).
rule_i(0,datastore(1,'RecycleRWType','1')).
rule_i(0,datastore(1,'RecycleRW','-1')).
rule_i(0,datastore(1,'POOL_STARTUP','No')).
rule_i(0,datastore(1,'POOLSIZE_RW','10')).
rule_i(0,datastore(1,'UnlimitedRWPool','-1')).
rule_i(0,datastore(1,'PoolRWEnabled','-1')).
rule_i(0,datastore(1,'CS_RPCPGML','')).
rule_i(0,datastore(1,'JDBC_DATASOURCE','')).
rule_i(0,datastore(1,'USE_JDBC_DATASOURCE','0')).
rule_i(0,datastore(1,'DS_DBMS_ADDINFO','')).
rule_i(0,datastore(1,'USER_PASSWORD',靠靠靠)).
rule_i(0,datastore(1,'USER_ID',sa)).
rule_i(0,datastore(1,'TRUSTED_CONNECTION','No')).
rule_i(0,datastore(1,'CS_CONNECT','First')).
rule_i(0,datastore(1,'DBMS_PORT','')).
rule_i(0,datastore(1,'CS_SERVER','DESKTOP-RK6IV3Q')).
rule_i(0,datastore(1,'CS_DBNAME','DAS_InstanceTYY')).
rule_i(0,datastore(1,'CS_FLEDSNAME','')).
rule_i(0,datastore(1,'CS_DRVNAME','sql server')).
rule_i(0,datastore(1,'CS_DSNAME','')).
rule_i(0,datastore(1,'DB_URL','')).
rule_i(0,datastore(1,'JDBC_CUSTOM_URL','0')).
rule_i(0,datastore(1,'JDBC_CUSTOM_DRIVER','')).
rule_i(0,datastore(1,'JDBC_DRIVER','net.sourceforge.jtds.jdbc.Driver')).
rule_i(0,datastore(1,'CONNECT_METHOD','OPSYS')).
rule_i(0,datastore(1,'ACCESS_TECHNO','ADONET')).
rule_i(0,datastore(1,'MAIN_DS','-1')).
rule_i(0,datastore(1,'REORG_GEN','8')).
rule_i(0,datastore(1,'HelpKeyword','20')).
rule_i(0,datastore(1,'DBMS',12)).
rule_i(0,datastore(1,'NAME','Default')).
rule_i(0,prop(idNULLS_BEHAVIOR,idNB_Current)).
rule_i(0,prop('PWFCallable','0')).
rule_i(0,prop('ObjectVisibility','Public')).
rule_i(0,prop('FullyQualifiedName','ZBR_DeleteMedicalImaging')).
rule_i(0,prop('GenerateObject','-1')).
rule_i(0,prop('CS_ORA_FORUPD','UMPV')).
rule_i(0,prop('Optimize_copy','UMPV')).
rule_i(0,prop('JOIN_TYPE','UMPV')).
rule_i(0,prop('DBMS_JOINS','UMPV')).
rule_i(0,prop('BEEPONMSG','UMPV')).
rule_i(0,prop('GENERATE_ILE','UMPV')).
rule_i(0,prop('PRT_DDS','UMPV')).
rule_i(0,prop('TRNCMT','YES')).
rule_i(0,prop('NULLVALUE_AS_NULL','UMPV')).
rule_i(0,prop('INITIALIZE_NEW','UMPV')).
rule_i(0,prop('STD_FUNC_OBJECT','Yes')).
rule_i(0,prop('SPC_WARNINGS_DISABLED','spc0096 spc0107 spc0142')).
rule_i(0,prop('TRNEND','Yes')).
rule_i(0,prop('AUTOCENTER','UMPV')).
rule_i(0,prop('LSTPFOOT','YES')).
rule_i(0,prop('CANCEL','YES')).
rule_i(0,prop('CONFIRM','UMPV')).
rule_i(0,prop('TRNCFM','UMPV')).
rule_i(0,prop('PRINT_CUST_LAYOUT','UMPV')).
rule_i(0,prop('OUTPUT','FIL')).
rule_i(0,prop(idConnectivitySupport,idInherit)).
rule_i(0,prop(idISBCEJB,'0')).
rule_i(0,prop(idISPRCWEBSERVICE,'0')).
rule_i(0,prop('USE_ENCRYPTION','NO')).
rule_i(0,prop('EXECUTE_IN_NEW_UTL','0')).
rule_i(0,prop('Theme',o(25,'WorkWithPlusTheme'))).
rule_i(0,prop('OBJECT_METADATA','')).
rule_i(0,prop('CALL_PROTOCOL','INTERNAL')).
rule_i(0,prop('IsMain','0')).
rule_i(0,prop(sessiontype,'RW')).
rule_i(0,prop('Folder',o(8,'ZUtil'))).
rule_i(0,prop('ObjDesc',删除影像学的所有信息)).
rule_i(0,prop('ObjName','ZBR_DeleteMedicalImaging')).
rule_i(0,maingen(15)).
rule_i(0,parm([ 'Ibr_medicalimagingid' ],[])).
rule_i(0,parmio([ [ 'Ibr_medicalimagingid',in ] ])).
rule_i(0,output('FIL')).
 
a_i(1,1,f,'Err',[],[ [],[ t('0',3) ] ]).
a_i(2,3,t,29,[],[ [ [ [],225,225 ] ],'IBR_MEDICALIMAGING_DIAG1',[] ]).
a_i(3,2,t,30,[],[ [ [ [],'Ibr_medicalimagingid',225 ] ],'IBR_MEDICALIMAGING',[] ]).
 
v_i(f,i,1,[]).
v_i(f,o,1,'Err').
v_i(t,i,2,225).
v_i(t,o,2,[]).
v_i(t,i,3,'Ibr_medicalimagingid').
v_i(t,o,3,225).
 
 
 
 
 
 
attri_i('Output',[ 'Gx_out',char,3,0,'',1,'','',14 ]).
attri_i(270,[ 'BR_MedicalImaging_DiagID',int,18,0,'ZZZZZZZZZZZZZZZZZZ',0,影像学诊断意见主键,'',0 ]).
attri_i(19,[ 'BR_EncounterID',int,18,0,'ZZZZZZZZZZZZZZZZZZ',0,就诊信息主键,'',0 ]).
attri_i(225,[ 'BR_MedicalImagingID',int,18,0,'ZZZZZZZZZZZZZZZZZZ',0,影像学主键,'',0 ]).
attri_i('Errmsg',[ 'Gx_emsg',char,70,0,'',1,'Error text','',11 ]).
attri_i('Err',[ 'Gx_err',int,3,0,'ZZ9',1,'Error code','',10 ]).
attri_i('Tbr_medicalimagingid',[ tBR_MedicalImagingID,int,18,0,'ZZZZZZZZZZZZZZZZZZ',0,影像学主键,'',9 ]).
attri_i('Ibr_medicalimagingid',[ iBR_MedicalImagingID,int,18,0,'ZZZZZZZZZZZZZZZZZZ',0,影像学主键,'',8 ]).
 
table_i(29,[ 'BR_MedicalImaging_Diag',[ 270,225 ],' T29','BR_MedicalImaging_Diag' ]).
table_i(30,[ 'BR_MedicalImaging',[ 225 ],' T30','BR_MedicalImaging' ]).
 
index_i(29,[ 'IBR_MEDICALIMAGING_DIAG',u,[ 270 ],'IBR_MedicalImaging_Diag' ]).
index_i(29,[ 'IBR_MEDICALIMAGING_DIAG1',d,[ 225 ],'IBR_MedicalImaging_Diag1' ]).
index_i(30,[ 'IBR_MEDICALIMAGING',u,[ 225 ],'IBR_MedicalImaging' ]).
 
 
 
 
 
 
 
 
 
 
 
 
 
upd_i(3,29,d,[ [],[],'IBR_MEDICALIMAGING_DIAG1',[] ]).
upd_i(2,30,d,[ [],[],'IBR_MEDICALIMAGING',[] ]).
 
 
 
start_i(2,0,0,[ [ [ 225,23,'Ibr_medicalimagingid',= ] ],one ]).
start_i(3,0,0,[ [ [ 225,2,225,= ] ],many ]).
 
end_i(2,0,0,[ [ [ t(225,2),t(=,10),t('Ibr_medicalimagingid',23) ] ] ]).
end_i(3,0,0,[ [ [ t(225,2),t(=,10),t(225,23) ] ] ]).
 
 
 
 
enumerated_i(45,514,93).
 
enum_value_i(45,98,'"Create"',insert,'"新增"',[ none ]).
enum_value_i(45,98,'"Update"',update,'"编辑"',[ none ]).
enum_value_i(45,98,'"Delete"',delete,'"删除"',[ none ]).
enum_value_i(45,98,'"Create"',save,'"保存"',[ none ]).
enum_value_i(45,98,'"Submit"',submit,'"提交审批"',[ none ]).
enum_value_i(45,98,'"Batchcheck"',batchcheck,'"批量初审"',[ none ]).
enum_value_i(45,98,'"Batchapprove"',batchapprove,'"批量复审"',[ none ]).
enum_value_i(45,98,'"Randomcheckpass"',randomcheckpass,'"初审抽查通过"',[ none ]).
enum_value_i(45,98,'"Randomcheckrefuse"',randomcheckrefuse,'"初审抽查不通过"',[ none ]).
enum_value_i(45,98,'"Randomapprovepass"',randomapprovepass,'"复审抽查通过"',[ none ]).
enum_value_i(45,98,'"Randomapproverefuse"',randomapproverefuse,'"复审抽查不通过"',[ none ]).
enum_value_i(45,98,'"Check"',check,'"初审通过"',[ none ]).
enum_value_i(45,98,'"Approve"',approve,'"复审通过"',[ none ]).
enum_value_i(45,98,'"Reupdate"',reupdate,'"重新修改"',[ none ]).
enum_value_i(45,98,'"Login"',login,'"登录"',[ none ]).
enum_value_i(45,93,'"否"',no,'"否"',[ none ]).
enum_value_i(45,93,'"是"',yes,'"是"',[ none ]).
enum_value_i(45,93,'"不详"',notclear,'"不详"',[ none ]).
 
enum_value_info_i(45,98,'DM_LogOperateType').
enum_value_info_i(45,93,'DM_IsComorbidity').
 
enum_type_i(45,98,svchar,40,0).
enum_type_i(45,93,svchar,40,0).
 
dom_info_i(69,[ 'ID' ]).
dom_info_i(64,[ 'DM_Date' ]).
dom_info_i(27,[ 'GeneXus\Html' ]).
dom_info_i(93,[ 'DM_IsComorbidity' ]).
 
 
break_i(3,nvg,2,[],[ [],[],[] ]).
break_i(2,nvg,1,[],[ [ 225 ],[],[] ]).
break_i(1,rpt,0,[],[ [ 19 ],[],[] ]).
 
b_group_i(1,1,lit,0,1,0).
b_group_i(1,2,nvg,2,1,1).
b_group_i(2,1,lit,0,2,2).
b_group_i(2,2,nvg,3,2,2).
b_group_i(3,1,lit,0,3,3).
b_group_i(2,3,lit,0,5,5).
b_group_i(1,3,lit,0,8,0).
 
b_line_i(0,1,1,cmd,0,[]).
b_line_i(1,2,1,cmd,2,[ t('',121,1,0),t(table,3,1,10),t(30,3,1,10) ]).
b_line_i(2,3,1,cmd,3,[ t('',121,2,0),t(table,3,2,11),t(29,3,2,11) ]).
b_line_i(3,3,1,cmd,3,[ t('',113,3,0) ]).
b_line_i(4,3,1,cmd,3,[ t('',128,3,0) ]).
b_line_i(5,2,3,cmd,5,[ t('',107,5,0),t('Tbr_medicalimagingid',23,5,0),t(=,10,5,0),t(225,2,5,0) ]).
b_line_i(6,2,3,cmd,5,[ t('',113,5,0) ]).
b_line_i(7,2,3,cmd,5,[ t('',128,5,0) ]).
b_line_i(8,1,3,cmd,7,[]).
b_line_i(9,1,3,cmd,7,[ t('',104,7,0),t(o(1,'ZUtil_RecordSonLog'),28,7,1),t('trim(',1,9,53),t('str(',1,7,41),t(19,2,7,26),t(',',7,7,41),t(18,3,7,41),t(',',7,7,41),t(0,3,7,41),t(')',4,7,51),t(')',4,7,59),t(',',7,7,0),t('''就诊信息''',3,9,61),t(',',7,7,0),t('trim(',1,9,102),t('str(',1,7,90),t('Tbr_medicalimagingid',23,7,68),t(',',7,7,90),t(18,3,7,90),t(',',7,7,90),t(0,3,7,90),t(')',4,7,100),t(')',4,7,108),t(',',7,7,0),t('''影像学''',3,9,110),t(',',7,7,0),t([ 98,delete ],44,9,116),t(',',7,7,0),t('1',3,7,141) ]).
 
 
 
 
 
 
page_layout_i([ 66,0,6 ]).
 
 
 
paper_info_i([ 0,256,'',11909,16834,0,0,0,0,1 ]).
 
ppi_i([ 100,100 ]).
 
 
 
 
 
 
 
 
 
 
 
 
 
warn_gen_i(msg([],spc0060,[ 'The program may be called by another program and the Commit on Exit property is set to YES' ])).
 
 
grid_i(7,15).
 
 
 
form_class_i(1,'Graphic').
 
 
 
 
 
att_prop_i(45,225,'ExternalName','BR_MedicalImagingID',d).
att_prop_i(45,225,'ExternalNamespace','DataAnalysisPlatform',d).
att_prop_i(45,225,'EmptyAsNull','Yes',d).
att_prop_i(45,225,idBasedOn,69,v).
att_prop_i(45,225,'AUTONUMBER','-1',d).
att_prop_i(45,225,'AUTONUMBER_START','1',d).
att_prop_i(45,225,'AUTONUMBER_STEP','1',d).
att_prop_i(45,225,'AUTONUMBER_FORREPLICATION','-1',d).
att_prop_i(45,225,'ATT_INITIAL_VALUE','',d).
att_prop_i(45,225,'AttRegEx','',d).
att_prop_i(45,225,'AttValidationFailedMsg','',d).
att_prop_i(45,225,'FullName','BR_MedicalImagingID',v).
att_prop_i(45,19,'ExternalName','BR_EncounterID',d).
att_prop_i(45,19,'ExternalNamespace','DataAnalysisPlatform',d).
att_prop_i(45,19,'EmptyAsNull','Yes',d).
att_prop_i(45,19,idBasedOn,69,v).
att_prop_i(45,19,'AUTONUMBER','-1',d).
att_prop_i(45,19,'AUTONUMBER_START','1',d).
att_prop_i(45,19,'AUTONUMBER_STEP','1',d).
att_prop_i(45,19,'AUTONUMBER_FORREPLICATION','-1',d).
att_prop_i(45,19,'ATT_INITIAL_VALUE','',d).
att_prop_i(45,19,'AttRegEx','',d).
att_prop_i(45,19,'AttValidationFailedMsg','',d).
att_prop_i(45,19,'FullName','BR_EncounterID',v).
att_prop_i(45,270,'ExternalName','BR_MedicalImaging_DiagID',d).
att_prop_i(45,270,'ExternalNamespace','DataAnalysisPlatform',d).
att_prop_i(45,270,'EmptyAsNull','Yes',d).
att_prop_i(45,270,idBasedOn,69,v).
att_prop_i(45,270,'AUTONUMBER','-1',d).
att_prop_i(45,270,'AUTONUMBER_START','1',d).
att_prop_i(45,270,'AUTONUMBER_STEP','1',d).
att_prop_i(45,270,'AUTONUMBER_FORREPLICATION','-1',d).
att_prop_i(45,270,'ATT_INITIAL_VALUE','',d).
att_prop_i(45,270,'AttRegEx','',d).
att_prop_i(45,270,'AttValidationFailedMsg','',d).
att_prop_i(45,270,'FullName','BR_MedicalImaging_DiagID',v).
 
tbl_prop_i(45,29,'AllDirSuper',[ [ 30,[ 225 ] ] ],v).
tbl_prop_i(45,29,'DirSuperNull',[ [ 30,[ 225 ] ] ],v).
tbl_prop_i(45,30,'DirSubor',[ [ 29,[ 225 ] ] ],v).
tbl_prop_i(45,29,'DirSuper',[ [ 30,[ 225 ] ] ],v).
 
tbl_att_prop_i(45,29,270,'AllowNulls',n).
tbl_att_prop_i(45,29,270,'AUTONUMBER',y).
tbl_att_prop_i(45,30,225,'AllowNulls',n).
tbl_att_prop_i(45,30,225,'AUTONUMBER',y).
 
var_prop_i(45,'Ibr_medicalimagingid',idBasedOn,'',v).
var_prop_i(45,'Tbr_medicalimagingid',idBasedOn,'',v).
 
 
 
 
 
 
 
 
 
 
 
 
pgm_parm_i(proc,86,'ZUTIL_RECORDSONLOG',[ [ svchar,5000,0,0 ],[ svchar,100,0,0 ],[ svchar,100,0,0 ],[ svchar,100,0,0 ],[ svchar,40,0,0 ],[ int,4,0,0 ] ],[ [ iXT_LogTarget,in,[] ],[ iXT_LogTargetModule,in,[] ],[ iXT_LogSonTarget,in,[] ],[ iXT_LogTargetSonModule,in,[] ],[ iXT_LogTargetOperate,in,[] ],[ tOperateType,in,[] ] ]).
 
pgm_callprotocol_i(proc,102,'ZBR_DELETEMEDICALIMAGING','INTERNAL').
pgm_callprotocol_i(proc,86,'ZUTIL_RECORDSONLOG','INTERNAL').
 
 
 
 
module_info_i('GeneXus','CSHARP_NAME_SPACE','GeneXus.Core').
module_info_i('GeneXus','AssemblyName','GeneXus.dll').
 
 
 
 
 
 
 
 
 
 
